// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250905112354_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Entities.Durum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DurumAciklama")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GorselYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HedefId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Saat")
                        .HasColumnType("time");

                    b.Property<int?>("Sure")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Uygulandi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HedefId");

                    b.ToTable("Durumlar");
                });

            modelBuilder.Entity("Entity.Entities.Hedef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("Olusturma")
                        .HasColumnType("datetime2");

                    b.Property<string>("Onem")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Periyot")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Hedefler");
                });

            modelBuilder.Entity("Entity.Entities.Oneri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Metin")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Oneriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aktif = true,
                            Metin = "Günde en az 2 kez dişlerinizi fırçalayın."
                        },
                        new
                        {
                            Id = 2,
                            Aktif = true,
                            Metin = "Diş ipi kullanmayı unutmayın."
                        },
                        new
                        {
                            Id = 3,
                            Aktif = true,
                            Metin = "Ağız gargarası kullanarak bakterileri azaltın."
                        },
                        new
                        {
                            Id = 4,
                            Aktif = true,
                            Metin = "Şekerli içecekleri sınırlayın."
                        },
                        new
                        {
                            Id = 5,
                            Aktif = true,
                            Metin = "6 ayda bir diş hekiminizi ziyaret edin."
                        },
                        new
                        {
                            Id = 6,
                            Aktif = true,
                            Metin = "Florürlü diş macunu kullanın."
                        },
                        new
                        {
                            Id = 7,
                            Aktif = true,
                            Metin = "Sigara ve tütün ürünlerinden kaçının."
                        },
                        new
                        {
                            Id = 8,
                            Aktif = true,
                            Metin = "Bol su için, ağzınızı nemli tutun."
                        });
                });

            modelBuilder.Entity("Entity.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Olusturma")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entity.Entities.Durum", b =>
                {
                    b.HasOne("Entity.Entities.Hedef", "Hedef")
                        .WithMany("Durumlar")
                        .HasForeignKey("HedefId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Hedef");
                });

            modelBuilder.Entity("Entity.Entities.Hedef", b =>
                {
                    b.Navigation("Durumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
